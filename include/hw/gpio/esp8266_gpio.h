#pragma once

#include "hw/sysbus.h"
#include "hw/hw.h"
#include "hw/registerfields.h"

#define TYPE_ESP8266_GPIO "esp8266.gpio"
#define ESP8266_GPIO(obj) OBJECT_CHECK(Esp8266GpioState, (obj), TYPE_ESP8266_GPIO)

#define ESP8266_STRAP_MODE_SD_BOOT    0x4
#define ESP8266_STRAP_MODE_FLASH_BOOT 0x3
#define ESP8266_STRAP_MODE_UART_BOOT  0x2

typedef struct Esp8266GpioState {
    SysBusDevice parent_obj;

    MemoryRegion iomem;
    qemu_irq irq;
    uint32_t strap_mode;
} Esp8266GpioState;

REG32(GPIO_OUT, 0x00000000)

REG32(GPIO_OUT_W1TS, 0x00000004)
REG32(GPIO_OUT_W1TC, 0x00000008)
REG32(GPIO_ENABLE, 0x0000000c)
REG32(GPIO_ENABLE_W1TS, 0x00000010)
REG32(GPIO_ENABLE_W1TC, 0x00000014)
REG32(GPIO_IN, 0x00000018)
    FIELD(GPIO_IN, STRAP, 16, 16)
    FIELD(GPIO_IN, IN_DATA, 0, 16)

REG32(GPIO_STATUS, 0x0000001c)
REG32(GPIO_STATUS_W1TS, 0x00000020)
REG32(GPIO_STATUS_W1TC, 0x00000024)
REG32(GPIO_PIN0, 0x00000028)
REG32(GPIO_PIN1, 0x0000002c)
REG32(GPIO_PIN2, 0x00000030)
REG32(GPIO_PIN3, 0x00000034)
REG32(GPIO_PIN4, 0x00000038)
REG32(GPIO_PIN5, 0x0000003c)
REG32(GPIO_PIN6, 0x00000040)
REG32(GPIO_PIN7, 0x00000044)
REG32(GPIO_PIN8, 0x00000048)
REG32(GPIO_PIN9, 0x0000004c)
REG32(GPIO_PIN10, 0x00000050)
REG32(GPIO_PIN11, 0x00000054)
REG32(GPIO_PIN12, 0x00000058)
REG32(GPIO_PIN13, 0x0000005c)
REG32(GPIO_PIN14, 0x00000060)
REG32(GPIO_PIN15, 0x00000064)
REG32(GPIO_SIGMA_DELTA, 0x00000068)
REG32(GPIO_RTC_CALIB_SYNC, 0x0000006c)
REG32(GPIO_RTC_CALIB_VALUE, 0x00000070)

